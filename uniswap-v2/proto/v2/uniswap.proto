syntax = "proto3";

package messari.uniswap.v2;

// https://github.com/Uniswap/v2-core/blob/master/contracts/UniswapV2Factory.sol
// https://github.com/Uniswap/v2-core/blob/master/contracts/UniswapV2Pair.sol

// event PairCreated(address indexed token0, address indexed token1, address pair, uint);
message PairCreatedEvent {
  string tx_hash = 1; // bytes: Hash
  uint32 log_index = 2;
  uint64 log_ordinal = 3;

  string token0 = 10; // bytes: Address
  string token1 = 11; // bytes: Address
  string pair = 12; // bytes: Address
}

message PairCreatedEvents {
  repeated PairCreatedEvent items = 1;
}

// event Mint(address indexed sender, uint amount0, uint amount1);
message MintEvent {
  string tx_hash = 1; // bytes: Hash
  uint32 log_index = 2;
  uint64 log_ordinal = 3;
  string pool_address = 6; // bytes: Address

  string sender = 10; // bytes: Address
  string amount0 = 11; // string: BigInt
  string amount1 = 12; // string: BigInt
}

message MintEvents {
  repeated MintEvent items = 1;
}

// event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);
message BurnEvent {
  string tx_hash = 1; // bytes: Hash
  uint32 log_index = 2;
  uint64 log_ordinal = 3;
  string pool_address = 6; // bytes: Address

  string sender = 10; // bytes: Address
  string amount0 = 11; // string: BigInt
  string amount1 = 12; // string: BigInt
  string to = 13; // bytes: Address
}

message BurnEvents {
  repeated BurnEvent items = 1;
}

// event Swap(address indexed sender, uint amount0In, uint amount1In, uint amount0Out, uint amount1Out, address indexed to);
message SwapEvent {
  string tx_hash = 1; // bytes: Hash
  uint32 log_index = 2;
  uint64 log_ordinal = 3;
  string pool_address = 6; // bytes: Address

  string sender = 10; // bytes: Address
  string amount0In = 11; // string: BigInt
  string amount1In = 12; // string: BigInt
  string amount0Out = 13; // string: BigInt
  string amount1Out = 14; // string: BigInt
  string to = 15; // bytes: Address
}

message SwapEvents {
  repeated SwapEvent items = 1;
}

// event Sync(uint112 reserve0, uint112 reserve1);
message SyncEvent {
  string tx_hash = 1; // bytes: Hash
  uint32 log_index = 2;
  uint64 log_ordinal = 3;

  string reserve0 = 10; // string: BigInt
  string reserve1 = 11; // string: BigInt
}

message SyncEvents {
  repeated SyncEvent items = 1;
}
